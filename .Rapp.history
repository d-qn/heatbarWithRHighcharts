country.layers <- ogrListLayers(file.path(path.ch, "ch-country.json"))
country.layers
country.df <- readOGR(file.path(path.ch, "ch-country.json"), "country")
country.layers <- ogrListLayers(file.path(path.ch, "ch-country.json"))
country.df <- formatShp(readOGR(file.path(path.ch, "ch-country.json"), country.layers[1]))
country.df <- readOGR(file.path(path.ch, "ch-country.json"), country.layers[1])
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 2) + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
country.df <- formatShp(readOGR(file.path(path.ch, "ch-country.json"), country.layers[1]))
country.df <- readOGR(file.path(path.ch, "ch-country.json"), country.layers[1])
str(country.df)
country.df <- fortify(readOGR(file.path(path.ch, "ch-country.json"), country.layers[1]))
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 2) + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1) + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
country.layers
ch.communes + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1) + geom_polygon(data = lake.df, fill = "lightgrey", colour = "lightgrey")
library(swiMap)
?getPathShp
require(rgdal)#
require(rgeos)#
require(ggplot2)
path.ch <- getPathShp('CH')#
ch <- readOGR(path.ch, layer = 'municipalities-without-lakes')#
ch.df <- formatShp(ch)#
# plot swiss commune map#
ch.communes <- ggplot(ch.df, aes(x = long, y = lat, group = group)) + geom_polygon(size = 0.01, aes(fill = GEMNAME)) +#
theme_minimal() + theme(legend.position = "none", panel.grid = element_blank(), axis.ticks = element_blank(), axis.title = element_blank(), axis.text = element_blank())#
ch.communes#
# add the lake and country contours#
lake.df <- formatShp(readOGR(path.ch, layer = "lakes"))#
country.layers <- ogrListLayers(file.path(path.ch, "ch-country.json"))#
country.df <- fortify(readOGR(file.path(path.ch, "ch-country.json"), country.layers[1]))
h.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1)
ch.communes + geom_polygon(data = country.df, fill = NA, color = "black", size = 0.1)
ogrListLayers(path.ch)
library(swiMap)
system.file("extdata", package="swiMap")
dir(system.file("extdata", package="swiMap"))
dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt")
?dir
dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)
data.path <- dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)#
  read.csv(data.path, sep ="\t")
?read.csv
data <- read.csv(data.path, sep ="\t",  header = FALSE)
str(data)
data.path <- dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)#
  data <- read.csv(data.path, sep ="\t",  header = FALSE, stringsAsFactors = F)
str(data)
head(data)
colnames(data) <- c('GHSTNR', 'BHSTNR', 'KTKZ', 'GBFSNR', 'GNAME', 'GNAMK', 'GARTE', #
                      'GSTAT', 'GINIMUT', 'GINIART', 'GINIDAT', 'GFINMUT', 'GFINART', #
                      'GFINDAT','GMUTDAT')
str(data)
asDate(data$GINIDAT)
as.Date(data$GINIDAT)
as.date
?as.Date
as.Date(data$GINIDAT, format = "%d.%m.%Y")
str(data)
as.Date(data$GINIDAT, format = "%d.%m.%Y")
data$GINIDAT <- as.Date(data$GINIDAT, format = "%d.%m.%Y")#
  data$GFINDAT <- as.Date(data$GFINDAT, format = "%d.%m.%Y")#
  data$GMUTDAT <- as.Date(data$GMUTDAT, format = "%d.%m.%Y")
str(data)
min(data$GINIDAT)
str(min(data$GINIDAT))
as.Date("1960-01-01")
today()
date()
?date()
Sys.Date()
"2012-01-01"
Sys.Date()
start <- as.Date(start)#
  end <- as.Date(end)
start
start<- "2012-01-01"
end <- Sys.Date()
start <- as.Date(start)#
  end <- as.Date(end)
start
end
str(data)
data$GFINDAT
data$GFINDAT >= start
which(data$GFINDAT >= start)
data[which(data$GFINDAT >= start),]
?encoding
?Encoding
data.path <- dir(system.file("extdata", package="swiMap"), "GDEHist_GDE\\.txt", full.names = T)#
  data <- read.csv(data.path, sep ="\t",  header = FALSE, stringsAsFactors = F, encoding = "latin1")#
  # colnames#
  colnames(data) <- c('GHSTNR', 'BHSTNR', 'KTKZ', 'GBFSNR', 'GNAME', 'GNAMK', 'GARTE', #
                      'GSTAT', 'GINIMUT', 'GINIART', 'GINIDAT', 'GFINMUT', 'GFINART', #
                      'GFINDAT','GMUTDAT')#
  # tranform to dates#
  data$GINIDAT <- as.Date(data$GINIDAT, format = "%d.%m.%Y")#
  data$GFINDAT <- as.Date(data$GFINDAT, format = "%d.%m.%Y")#
  data$GMUTDAT <- as.Date(data$GMUTDAT, format = "%d.%m.%Y")
data[which(data$GFINDAT >= start),]
data[which(data$GFINDAT >= start & data$GINIART == 24),]
data[which(data$GFINDAT >= start & data$GINIART == 26),]
data[which(data$GFINDAT >= start || data$GINIDAT >= start),]
data[which(data$GFINDAT >= start | data$GINIDAT >= start),]
data[which(data$GFINDAT >= start & data$GINIART == 26),]
start
data[which(data$GFINDAT >= start & data$GINIART == 26),'GFINMUT']
data$GFINMUT %in% data[which(data$GFINDAT >= start & data$GINIART == 26),'GINITMUT']
which(data$GFINMUT %in% data[which(data$GFINDAT >= start & data$GINIART == 26),'GINITMUT'])
data[which(data$GFINDAT >= start & data$GINIART == 26),'GFINMUT']
data[which(data$GFINDAT >= start & data$GINIART == 26),]
data[which(data$GFINDAT >= start & data$GINIART == 24),]
which(data$GINIMUT == 3404)
data[which(data$GINIMUT == 3404),]
data[which(data$GFINDAT >= start | data$GINIDAT >= start),]
data[which((data$GFINDAT >= start | data$GINIART >= start) & (data$GFINDAT <= end | data$GINIART <= end)),]
data[which((data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GINIMUT == 3404),]
data[which(data$GFINDAT >= start | data$GINIART >= start),]
test<- data[which(data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GFINDAT >= start | data$GINIART >= start),]
data[which(data$GINIMUT == 3404),]
test
data[which(data$GINIMUT == 3404),]
any(test$GINIMUT == 3404)
summary(data$GFINDAT)
T | NA
NA | T
data[which((data$GFINDAT >= start | data$GINIDAT >= start) & (data$GFINDAT <= end | data$GINIDAT <= end)),]
library(swiTheme)
?multiplot
q1 <- qplot(1:10, 1:10, size = 10:1) + xlab("axis x label") + ylab ("y axis label") + theme_swi2()#
q2 <- qplot(mpg, data = mtcars, geom = "dotplot") + theme_swi()#
multiplot(list(q1, q2))
library(leaflet)
(m <- leaflet() %>% addTiles())
m %>% setView(lng = -1.5, lat = 53.4, zoom = 10) # set centre and extent of map
(m2 <- m %>%#
  setView(-1.5, 53.4, 10) %>% # map location#
  addMarkers(-1.4, 53.5) %>% # add a marker#
  addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup#
  # add som circles:#
  addCircles(color = "black", runif(90, -2, -1), runif(90, 53, 54), runif(90, 10, 500)))
library(leaflet)#
m = leaflet() %>% addTiles()
m
? addTiles
library(leaflet)#
m = leaflet() %>% addTiles()
m
m %>% setView(lng = -1.5, lat = 53.4, zoom = 10)
?leaflet
?leafletOutput
(m2 <- m %>%#
  setView(-1.5, 53.4, 10) %>% # map location#
  addMarkers(-1.4, 53.5) %>% # add a marker#
  addPopups(-1.6, 53.3, popup = "Hello Sheffield!") %>% # popup#
  # add som circles:#
  addCircles(color = "black", runif(90, -2, -1), runif(90, 53, 54), runif(90, 10, 500)))
? renderLeaflet
?leafletMap
?leafletOutput
?publish
publish
save
?save
m2
save(m2)
save(m2, "test")
save(m2, file = "test")
getwd()
? html_print
? toHTML
library(streamgraph)#
library(dplyr)#
ggplot2::movies %>%#
  select(year, Action, Animation, Comedy, Drama, Documentary, Romance, Short) %>%#
  tidyr::gather(genre, value, -year) %>%#
  group_by(year, genre) %>%#
  tally(wt=value) %>%#
  streamgraph("genre", "n", "year") %>%#
  sg_axis_x(20) %>%#
  sg_colors("PuOr") %>%#
  sg_legend(show=TRUE, label="Genres: ")
saveWidget
library(rgdal)#
library(leaflet)#
#
tmp <- tempdir()#
#
url <- "http://personal.tcu.edu/kylewalker/data/mexico.zip"#
#
file <- basename(url)#
#
download.file(url, file)#
#
unzip(file, exdir = tmp)#
#
mexico <- readOGR(dsn = tmp, layer = "mexico", encoding = "UTF-8")
library("swiTheme")#
library("swiRcharts")#
library("dplyr")#
library("rjson")#
#
#############################################################################################
###		SETTINGS	#
#############################################################################################
#
votefile <- "data/VOTEScsv_cleaned.csv"#
#
#############################################################################################
###		load initiative data	#
#############################################################################################
#
initiatives.read <- read.csv(votefile, check.names = F, stringsAsFactors = F, encoding = "latin1")#
#
# reverse order #
initiatives.read <- initiatives.read[rev(as.numeric(rownames(initiatives.read))),]#
#
# filter columns#
initiatives <- initiatives.read %>% select(`Date of Votes`, `Title in English`, `Title in German`, `Title in French`, `Title in Italien`, `Yes [%]`, `Theme codes`)#
# transform date to date#
initiatives$date <- as.Date(initiatives$`Date of Votes`)#
#
initiatives$year <- as.numeric(substr(initiatives$`Date of Votes`,1, 4))#
# add counter iniitiative per year #
initiatives <- do.call(rbind, by(initiatives, initiatives$year, function(ii) {#
	cbind(ii, n = nrow(ii):1)#
}))#
#############################################################################################
###		Plot#
#############################################################################################
#
## PLOT SETTINGS#
plot.height <- 350#
#
data <- initiatives %>% select (`Title in English`, `year`, `n`,  `Yes [%]`)#
colnames(data) <- c('name', 'y', 'x', 'value')#
#
a <- Highcharts$new()#
#
# use type='heatmap' for heat maps#
a$chart(zoomType = "x", type = 'heatmap', height = plot.height, plotBackgroundColor = "#f7f5ed", inverted = TRUE)#
a$series( data = rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),	  #
      list(0.5, '#999966'),#
      list(1, '#336666') #
  ))#
)#
#
# a$legend(align='right',#
#          layout='vertical',#
#          margin=0,#
#          verticalAlign='top',#
#          y=25,#
#          symbolHeight=plot.height)#
a$yAxis(max = max(data$y), ceiling = max(data$y), maxPadding = 0, tickAmount = 2, gridLineWidth =  0, minorGridLineWidth = 0, title = list(text = ""))#
#
a$xAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', labels = list(enabled = FALSE), #
	minorTickLength = 0, tickLength =  0)  	#
a$tooltip(formatter = "#! function() { return 'In <b>' + this.point.y + ',</b> the initative:<br><i>' + this.point.name +#
                    '</i><br>recolted <b>' + this.point.value + '%</b> of yes'; } !#")	 #
a$legend(enabled = F)#
a$addAssets(js =#
   c(#"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     # "https://code.highcharts.com/highcharts.js",#
     # "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
#
a$save(destfile = 'initiative.html')#
#
hChart2responsiveHTML("initiative.html", output.html = "initiative_heatmap.html", h2 = "Toutes les initiatives populaires suisses", descr = "",#
	source = "", h3 = "", author = "Duc-Quang Nguyen | swissinfo.ch")
library(swiRchart)
library(swiRcharts)
?hSeries
ibrary(swiTheme)#
a <- rCharts::Highcharts$new()#
x <- 1:10#
y <- seq(1, 100, 10)#
z <- 10:1#
color <- rep(c("grey", "red"), 5)#
name <- c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")#
series <- c(rep(c("blob", "poop", "doop"), 3), "asdf")#
a$series(hSeries(x,y,z,name, color, series))#
#
# tweak the bubble plot#
a$chart(zoomType = "xy", type = "bubble")#
a$plotOptions(bubble = list(dataLabels = list(enabled = T, style = list(textShadow = 'none') ,#
color = '#aa8959', formatter = "#! function() { return this.point.name; } !#")))#
#
a$colors(swi_rpal)#
a$tooltip(formatter = "#! function() { return this.point.name + ':' +this.x + ', ' + this.y; } !#")#
a$xAxis(title = list(text = "important indicator", align = "high"), lineColor = list ('#FF0000'))#
a#
#
hChart.html <- tempfile("hchart_labelledBubble.html")#
a$save(hChart.html)
library(swiRchart)
library(swiRcharts)
?hSeries
library(swiTheme)#
a <- rCharts::Highcharts$new()#
x <- 1:10#
y <- seq(1, 100, 10)#
z <- 10:1#
color <- rep(c("grey", "red"), 5)#
name <- c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")#
series <- c(rep(c("blob", "poop", "doop"), 3), "asdf")#
a$series(hSeries(x,y,z,name, color, series))
a$chart(zoomType = "xy", type = "bubble")#
a$plotOptions(bubble = list(dataLabels = list(enabled = T, style = list(textShadow = 'none') ,#
color = '#aa8959', formatter = "#! function() { return this.point.name; } !#")))#
#
a$colors(swi_rpal)#
a$tooltip(formatter = "#! function() { return this.point.name + ':' +this.x + ', ' + this.y; } !#")#
a$xAxis(title = list(text = "important indicator", align = "high"), lineColor = list ('#FF0000'))#
a#
#
hChart.html <- tempfile("hchart_labelledBubble.html")#
a$save(hChart.html)
hChart2responsiveHTML
library(swiRcharts)
?hSeries
library(swiTheme)#
a <- rCharts::Highcharts$new()#
x <- 1:10#
y <- seq(1, 100, 10)#
z <- 10:1#
color <- rep(c("grey", "red"), 5)#
name <- c("a", "b", "c", "d", "e", "f", "g", "h", "i", "j")#
series <- c(rep(c("blob", "poop", "doop"), 3), "asdf")#
a$series(hSeries(x,y,z,name, color, series))
hSeries2 <- hSeries2(data.frame(x = x, y = y, z = z, color = color, name = name, series = series), "series")#
 b <- rCharts::Highcharts$new()#
b$series(hSeries2)
b
install.packages("readr")
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD')
library("swiTheme")#
library("swiRcharts")#
library("dplyr")#
#
#############################################################################################
###		SETTINGS#
#############################################################################################
#
# download the raw file without footer!!!#
votefile <- "data/allCH_ballots - VOTES_allCH_2015-05-13.csv"#
votes.read <- read.csv(votefile, check.names = F, stringsAsFactors = F)#
#
trad <- read.csv("data/allCH_ballots - translations.tsv", sep ="\t", row.names = 1, stringsAsFactors = F)#
#
votes.read <- read.csv(votefile, check.names = F, stringsAsFactors = F)#
# PLOT SETTINGS#
plot.height <- 500#
outputDir <- "graphics"#
#
if(!file.exists(outputDir)) {#
	dir.create(outputDir)#
}#
#
#############################################################################################
###		load ballot data#
#############################################################################################
#
votes.read$type <- as.factor(votes.read$type)#
#
## transform date to date#
votes.read$date <- as.Date(votes.read$`Date of Votes`, format = "%d/%m/%Y")#
#
## add year#
votes.read$year <- as.numeric(substr(votes.read$date,1, 4))#
#
## add counter of ballot type per year#
votes.read <- do.call(rbind, by(votes.read, list(votes.read$year, votes.read$type), function(ii) {#
	cbind(ii, n = as.numeric(0:(nrow(ii)-1)))#
}))#
#
#############################################################################################
###		Load microcopy translations#
#############################################################################################
#
##### DEBUGGING CASE ~~~~~~~~~~~~#
votetype <- levels(votes.read$type)[2]#
lang <- colnames(trad)[1]#
for(votetype in levels(votes.read$type)) {#
#
	for(lang in colnames(trad)) {#
#
		# Define output files#
		typeShort <- gsub(" ", "", votetype)#
		tmpOuputfile <- paste0(outputDir, "/", typeShort, ".html")#
		output.html <- paste0(typeShort, "_", lang, "_heatmap.html")#
#
		# Define which vote colname to use#
		col.subset <- c(lang, 'year', 'n', 'Yes [%]', 'Result', 'date', 'Turnout' )#
#
		# subset ballot data for the ballot type and the languages#
		data <- votes.read %>% filter(type == votetype) %>% select(one_of(col.subset))#
		##
		title.bak <- data[,lang]#
#
		# rename data for highcharts#
		colnames(data)[1:5] <- c('name', 'x', 'y', 'value', 'result')#
#
		# add HTML break for name longer than 50 characters#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)#
#
		# Perform vote type specific stuff#
		# heatmap colors#
		color0.5 <- '#ADC2C2'#
		color1 <- '#336666'#
		subtitle.x <- 5#
		subtitle.align <- "left"#
		resetZoomButton.align <- "right"#
		if(typeShort == 'facultativeReferendum') {#
			color0.5 <- '#C2C2D1'#
			color1 <- '##333366'#
		}#
		if(typeShort == 'mandatoryReferendum') {#
			color0.5 <- '#C2C2D1'#
			color1 <- '#333366'#
			subtitle.align <- "right"#
			subtitle.x <- -5#
			resetZoomButton.align <- "left"#
		}#
#
		## Create the new name as an HTML table (http://rcharts.io/viewer/?5735146)#
#
		data$name <- paste0(#
			'<table cellpadding="1" style="line-height:1.4">',#
		        '<tr><td><div style="font-size:0.9em">', data$date, '</td></div>',#
					'<td></td><td></td></tr>',#
		       '<tr><td colspan="3"><i><div style="font-size:1.1em">', data$name, '</i></div><hr></td></tr>',#
		       '<tr><td align="left">', trad["tp.yes",lang], ': <b>', round(data$value, 1), '%</b>', '</td><td></td>',#
			   		'<td style="text-align:right">', trad["tp.turnout",lang],  " : ",#
					ifelse(round(data$Turnout, 1) == 0, " ", paste0(round(data$Turnout, 1), "%")), '</td></tr>',#
				'<tr><td colspan="3" align="center"><div style="color:#999999">',#
					ifelse(data$result == "no", trad["tp.refused",lang], trad["tp.accepted",lang]), '</td></tr>',#
			'</table></div>')#
#
		## Heatmap column chart#
		a <- Highcharts$new()#
		# use type='heatmap' for heat maps#
		a$chart(zoomType = "x", type = 'heatmap', height = plot.height, plotBackgroundColor = "#f7f5ed", spacing = 5,#
			resetZoomButton = list(position = list( align = resetZoomButton.align )))#
		a$series(hSeries2(data, "result"))#
#
		a$addParams(colorAxis =#
		  list(min = 0, max = 100, stops = list(#
			  list(0, '#ab3d3f'),#
		      list(0.499, '#EED8D9'),#
		      list(0.5, color0.5),#
		      list(1, color1)#
		  ))#
		)#
#
		a$legend(align='center',#
		         layout='horizontal',#
		         margin=-42,#
		         verticalAlign='top',#
				 symbolWidth = 100,#
		         symbolHeight=5#
		)#
#
		a$xAxis(min = min(data$x), max = max(data$x), ceiling = max(data$x), maxPadding = 0, tickAmount = 2,title = list(text = ""))#
		a$yAxis(min = min(data$y), max = max(data$y),#
			maxPadding = 0, lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
			labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
		a$tooltip(formatter = "#! function() { return this.point.name; } !#", useHTML = T,#
			borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)', style = list(padding = 3))#
#
		addhtmlbreak <- function(text) {#
			gsub('(.{1,30})(\\s|$)', '\\1\\<br\\>', text)#
		}#
		subtitle <-  paste(addhtmlbreak(trad['subtitle1',lang]), addhtmlbreak(trad['subtitle2',lang]), sep = "<br><br>")#
		a$subtitle(text = subtitle, useHTML = T, align = subtitle.align, x = subtitle.x, floating = T,#
			style = list(color = '#d4c3aa', fontSize = "0.6em"))#
#
		a$addAssets(c("https://code.highcharts.com/modules/heatmap.js"))#
		a$save(destfile = tmpOuputfile)#
		yRange <- paste(range(data$x), collapse = "-")#
		hChart2responsiveHTML(tmpOuputfile, output.html = output.html, output = outputDir, h2 = trad[eval(paste("title", typeShort, sep = ".")),lang],#
			descr = paste0(trad[eval(paste("descr1", typeShort, sep = ".")),lang], yRange, trad[eval(paste("descr2", typeShort, sep = ".")),lang]),#
			source = trad["source",lang], h3 = "", author = ' <a href = "http://www.swissinfo.ch">swissinfo.ch</a>')#
#
		browseURL(file.path(outputDir, output.html))#
#
	} # end loop language#
#
} # end loop votetype#
#############################################################################################
###		KEYWORDS ANALYSIS
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T))#
attributes(df) <- NULL#
df <- list(df)#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(df)#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
names(df)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T))#
attributes(df) <- NULL
str(df)
names(df)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T))#
attributes(df) <- NULL#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(list(series = df))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T))#
#attributes(df) <- NULL#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(list(series = df))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
str(df)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T))#
#attributes(df) <- NULL#
df2 <- hSeries2(data, "x")
str(df2)
unlist(df2)
str(df2[[1]])
str(df)
length(df)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T), name = "justaname")#
attributes(df) <- NULL#
#df2 <- hSeries2(data, "x")#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(list(series = df))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
a
str(df)
length(df)
lenght(df2[[1]])
length(df2[[1]])
df2[[1]]
str(df2[[1]])
hSeries2
str(df2[[1]])
str(df)
str(df[[1]])
str(df2[[1]])
str(df)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T), name = "justaname")#
attributes(df) <- NULL#
#df2 <- hSeries2(data, "x")#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(df)#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
		# rename data for highcharts#
		colnames(data) <- c('name', 'x', 'y', 'value')#
		# add HTML break for name longer than given threshold#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T), name = "justaname")#
attributes(df) <- NULL
df
names(df)
sapply(df, names)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T), name = "justaname")#
attributes(df) <- NULL
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T), name = "justaname")#
#attributes(df) <- NULL#
#df2 <- hSeries2(data, "x")#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(df)#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
		# rename data for highcharts#
		colnames(data) <- c('name', 'x', 'y', 'value')#
		# add HTML break for name longer than given threshold#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T), name = "justaname")
str(df)
lenght(df)
length(df)
names(df)
sapply(df2, names)
sapply(df2, str)
length(df2)
names(df2)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
# tweak the data.frame to be plotted by rcharts #
df <- list(data = rCharts::toJSONArray2(data, json = F, names = T), name = "justaname")#
attributes(df) <- NULL#
#df2 <- hSeries2(data, "x")#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(list(df))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
		# rename data for highcharts#
		colnames(data) <- c('name', 'x', 'y', 'value')#
		# add HTML break for name longer than given threshold#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
#colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(data = list(x = data$year, y = data$n, value = data$yes, name = data$name))
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
#colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(list(data = list(x = data$year, y = data$n, value = data$yes, name = data$name), name = "justaname"))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
		# rename data for highcharts#
		colnames(data) <- c('name', 'x', 'y', 'value')#
		# add HTML break for name longer than given threshold#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
library(swiRcharts) #~~~~~~~~~~#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
#colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(data = list(x = data$year, y = data$n, value = data$yes, name = data$name), name = "justaname")#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
library(swiRcharts) #~~~~~~~~~~#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')
str(data)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
library(swiRcharts) #~~~~~~~~~~#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(data = list(x = data$x, y = data$y, value = data$value, name = data$name), name = "justaname")#
a$series(hSeries2(data, "x"))
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
library(swiRcharts) #~~~~~~~~~~#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
#a$series(data = list(x = data$x, y = data$y, value = data$value, name = data$name), name = "justaname")#
a$series(hSeries2(data, "x"))
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
str(data)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
library(swiRcharts) #~~~~~~~~~~#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(data = list(x = data$x, y = data$y, value = data$value, name = data$name), name = "justaname")
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(name = "justaname", data =  rCharts::toJSONArray2(data, json = F, names = T))
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(name = "justaname", data =  rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names #
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
a$series(name = "", data =  rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names of the data.frame to be highcharts friendly#
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
### PLOT#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
# Pass the data.#
a$series(name = "", data =  rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
#a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names of the data.frame to be highcharts friendly#
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
### PLOT#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
# Pass the data.#
a$series(name = "", data =  rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
#a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
#a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
		# rename data for highcharts#
		colnames(data) <- c('name', 'x', 'y', 'value')#
		# add HTML break for name longer than given threshold#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names of the data.frame to be highcharts friendly#
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
### PLOT#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
# Pass the data.#
a$series(name = "", data =  rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
#a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#
#a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
		# rename data for highcharts#
		colnames(data) <- c('name', 'x', 'y', 'value')#
		# add HTML break for name longer than given threshold#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)
setwd('/Users/nguyendu/Google Drive/swissinfo/2015_04_29_CHvotes_DD/openGithub')
library(rCharts)#
#
### CREDITS#
# http://stefan-wilhelm.net/interactive-highcharts-heat-maps-in-r-with-rcharts/#
#
### Load the data file#
data <- read.csv("citizenIniatives_ch.csv", stringsAsFactors = F)#
#
### Aggregate the data by year#
data$year <- as.numeric(substr(data$date,1, 4))#
#
# add counter of the observations (initiatives) per year. counter starts at 0#
data <- do.call(rbind, by(data, data$year, function(dd) cbind(dd, n = as.numeric(0:(nrow(dd)-1)))))#
rownames(data) <- NULL#
#
# change the names of the data.frame to be highcharts friendly#
colnames(data) <- c('date', 'name', 'value', 'x', 'y')#
### PLOT#
a <- Highcharts$new()#
# use type='heatmap' for heat maps#
a$chart(zoomType = "xy", type = 'heatmap')#
# Pass the data.#
a$series(name = "", data =  rCharts::toJSONArray2(data, json = F, names = T))#
#
a$addParams(colorAxis =#
  list(min = 0, max = 100, stops = list(#
	  list(0, '#ab3d3f'),#
      list(0.499, '#EED8D9'),#
      list(0.5, '#ADC2C2'),#
      list(1, '#336666')#
  ))#
)#
#a$legend(align='center', layout='horizontal', margin=-42, verticalAlign='top', symbolHeight=5)#
#a$xAxis(maxPadding = 0, tickAmount = 2,title = list(text = ""))#
# a$yAxis(lineWidth = 0, minorGridLineWidth = 0, lineColor = 'transparent', title = list(text = ""),#
# 	labels = list(enabled = FALSE), minorTickLength = 0, tickLength =  0, gridLineWidth =  0, minorGridLineWidth = 0)#
#
# formatter <- "#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">In <b>' + this.point.x + ',</b> the initative:<br><i>' +#
# 	this.point.name + '</i>gathered <b>' + this.point.value + '%</b> of yes</div>'; } !#"#
#
# formatter <- paste0("#! function() { return '<div class=\"tooltip\" style=\"color:#686868;font-size:0.8em\">",#
# 	trad[eval(paste("tp", "In", sep = ".")), lang], " <b>'+ this.point.x + ',</b> ", gsub("'", " ", trad[eval(paste("tp", typeShort, sep = ".")),lang]),#
# 	 ":<br><br><i>' + this.point.name + '</i><br>", trad[eval(paste("tp", "yield", sep = ".")),lang], " <b>' + this.point.value + '%</b> ",#
# 	  trad[eval(paste("tp", "ofyes", sep = ".")),lang], "</div>'; } !#")#
##
# a$tooltip(formatter = formatter, useHTML = T, borderWidth = 2, backgroundColor = 'rgba(255,255,255,0.8)')#
#
a$addAssets(js = #
   c("https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js",#
     "https://code.highcharts.com/highcharts.js",#
     "https://code.highcharts.com/highcharts-more.js",#
     "https://code.highcharts.com/modules/exporting.js",#
     "https://code.highcharts.com/modules/heatmap.js"#
     )#
)#
a#
		# rename data for highcharts#
		colnames(data) <- c('name', 'x', 'y', 'value')#
		# add HTML break for name longer than given threshold#
		data$name <- gsub('(.{1,50})(\\s|$)', '\\1\\<br\\>', data$name)
